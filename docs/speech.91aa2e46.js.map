{"version":3,"sources":["colors.js","handlers.js","speech.js"],"names":["colors","black","silver","gray","grey","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","darkblue","mediumblue","darkgreen","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","springgreen","cyan","midnightblue","dodgerblue","lightseagreen","forestgreen","seagreen","darkslategray","darkslategrey","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","rebeccapurple","mediumaquamarine","dimgray","dimgrey","slateblue","olivedrab","slategray","slategrey","lightslategray","lightslategrey","mediumslateblue","lawngreen","chartreuse","aquamarine","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","darkgrey","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","mediumvioletred","indianred","peru","chocolate","tan","lightgray","lightgrey","thistle","orchid","goldenrod","palevioletred","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","lightyellow","ivory","isDark","colorName","hex","substring","r","parseInt","colorsByLength","Object","keys","sort","a","b","length","isValidColor","word","logWords","results","console","log","transcript","handleResult","words","color","toLowerCase","replace","document","querySelector","classList","add","body","style","backgroundColor","colorsEl","displayColors","map","join","start","window","recognition","SpeechRecognition","continuous","interimResults","onresult","webkitSpeechRecognition","innerHTML"],"mappings":"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","file":"speech.91aa2e46.js","sourceRoot":"..","sourcesContent":["export const colors = {\r\n  black: '#000000',\r\n  silver: '#C0C0C0',\r\n  gray: '#808080',\r\n  grey: '#808080',\r\n  white: '#FFFFFF',\r\n  maroon: '#800000',\r\n  red: '#FF0000',\r\n  purple: '#800080',\r\n  fuchsia: '#FF00FF',\r\n  green: '#008000',\r\n  lime: '#00FF00',\r\n  olive: '#808000',\r\n  yellow: '#FFFF00',\r\n  navy: '#000080',\r\n  blue: '#0000FF',\r\n  teal: '#008080',\r\n  aqua: '#00FFFF',\r\n  darkblue: '#00008B',\r\n  mediumblue: '#0000CD',\r\n  darkgreen: '#006400',\r\n  darkcyan: '#008B8B',\r\n  deepskyblue: '#00BFFF',\r\n  darkturquoise: '#00CED1',\r\n  mediumspringgreen: '#00FA9A',\r\n  springgreen: '#00FF7F',\r\n  cyan: '#00FFFF',\r\n  midnightblue: '#191970',\r\n  dodgerblue: '#1E90FF',\r\n  lightseagreen: '#20B2AA',\r\n  forestgreen: '#228B22',\r\n  seagreen: '#2E8B57',\r\n  darkslategray: '#2F4F4F',\r\n  darkslategrey: '#2F4F4F',\r\n  limegreen: '#32CD32',\r\n  mediumseagreen: '#3CB371',\r\n  turquoise: '#40E0D0',\r\n  royalblue: '#4169E1',\r\n  steelblue: '#4682B4',\r\n  darkslateblue: '#483D8B',\r\n  mediumturquoise: '#48D1CC',\r\n  indigo: '#4B0082',\r\n  darkolivegreen: '#556B2F',\r\n  cadetblue: '#5F9EA0',\r\n  cornflowerblue: '#6495ED',\r\n  rebeccapurple: '#663399',\r\n  mediumaquamarine: '#66CDAA',\r\n  dimgray: '#696969',\r\n  dimgrey: '#696969',\r\n  slateblue: '#6A5ACD',\r\n  olivedrab: '#6B8E23',\r\n  slategray: '#708090',\r\n  slategrey: '#708090',\r\n  lightslategray: '#778899',\r\n  lightslategrey: '#778899',\r\n  mediumslateblue: '#7B68EE',\r\n  lawngreen: '#7CFC00',\r\n  chartreuse: '#7FFF00',\r\n  aquamarine: '#7FFFD4',\r\n  skyblue: '#87CEEB',\r\n  lightskyblue: '#87CEFA',\r\n  blueviolet: '#8A2BE2',\r\n  darkred: '#8B0000',\r\n  darkmagenta: '#8B008B',\r\n  saddlebrown: '#8B4513',\r\n  darkseagreen: '#8FBC8F',\r\n  lightgreen: '#90EE90',\r\n  mediumpurple: '#9370DB',\r\n  darkviolet: '#9400D3',\r\n  palegreen: '#98FB98',\r\n  darkorchid: '#9932CC',\r\n  yellowgreen: '#9ACD32',\r\n  sienna: '#A0522D',\r\n  brown: '#A52A2A',\r\n  darkgray: '#A9A9A9',\r\n  darkgrey: '#A9A9A9',\r\n  lightblue: '#ADD8E6',\r\n  greenyellow: '#ADFF2F',\r\n  paleturquoise: '#AFEEEE',\r\n  lightsteelblue: '#B0C4DE',\r\n  powderblue: '#B0E0E6',\r\n  firebrick: '#B22222',\r\n  darkgoldenrod: '#B8860B',\r\n  mediumorchid: '#BA55D3',\r\n  rosybrown: '#BC8F8F',\r\n  darkkhaki: '#BDB76B',\r\n  mediumvioletred: '#C71585',\r\n  indianred: '#CD5C5C',\r\n  peru: '#CD853F',\r\n  chocolate: '#D2691E',\r\n  tan: '#D2B48C',\r\n  lightgray: '#D3D3D3',\r\n  lightgrey: '#D3D3D3',\r\n  thistle: '#D8BFD8',\r\n  orchid: '#DA70D6',\r\n  goldenrod: '#DAA520',\r\n  palevioletred: '#DB7093',\r\n  crimson: '#DC143C',\r\n  gainsboro: '#DCDCDC',\r\n  plum: '#DDA0DD',\r\n  burlywood: '#DEB887',\r\n  lightcyan: '#E0FFFF',\r\n  lavender: '#E6E6FA',\r\n  darksalmon: '#E9967A',\r\n  violet: '#EE82EE',\r\n  palegoldenrod: '#EEE8AA',\r\n  lightcoral: '#F08080',\r\n  khaki: '#F0E68C',\r\n  aliceblue: '#F0F8FF',\r\n  honeydew: '#F0FFF0',\r\n  azure: '#F0FFFF',\r\n  sandybrown: '#F4A460',\r\n  wheat: '#F5DEB3',\r\n  beige: '#F5F5DC',\r\n  whitesmoke: '#F5F5F5',\r\n  mintcream: '#F5FFFA',\r\n  ghostwhite: '#F8F8FF',\r\n  salmon: '#FA8072',\r\n  antiquewhite: '#FAEBD7',\r\n  linen: '#FAF0E6',\r\n  lightgoldenrodyellow: '#FAFAD2',\r\n  oldlace: '#FDF5E6',\r\n  magenta: '#FF00FF',\r\n  deeppink: '#FF1493',\r\n  orangered: '#FF4500',\r\n  tomato: '#FF6347',\r\n  hotpink: '#FF69B4',\r\n  coral: '#FF7F50',\r\n  darkorange: '#FF8C00',\r\n  lightsalmon: '#FFA07A',\r\n  orange: '#FFA500',\r\n  lightpink: '#FFB6C1',\r\n  pink: '#FFC0CB',\r\n  gold: '#FFD700',\r\n  peachpuff: '#FFDAB9',\r\n  navajowhite: '#FFDEAD',\r\n  moccasin: '#FFE4B5',\r\n  bisque: '#FFE4C4',\r\n  mistyrose: '#FFE4E1',\r\n  blanchedalmond: '#FFEBCD',\r\n  papayawhip: '#FFEFD5',\r\n  lavenderblush: '#FFF0F5',\r\n  seashell: '#FFF5EE',\r\n  cornsilk: '#FFF8DC',\r\n  lemonchiffon: '#FFFACD',\r\n  floralwhite: '#FFFAF0',\r\n  snow: '#FFFAFA',\r\n  lightyellow: '#FFFFE0',\r\n  ivory: '#FFFFF0',\r\n};\r\n\r\nexport function isDark(colorName) {\r\n  const hex = colors[colorName].substring(1, 7);\r\n  const r = parseInt(hex.substring(0, 2), 16);\r\n  const g = parseInt(hex.substring(2, 4), 16);\r\n  const b = parseInt(hex.substring(4, 6), 16);\r\n  return r * 0.299 + g * 0.587 + b * 0.114 < 120;\r\n}\r\n\r\nexport const colorsByLength = Object.keys(colors).sort(\r\n  (a, b) => a.length - b.length\r\n);\r\n\r\nexport function isValidColor(word) {\r\n  return !!colors[word];\r\n}\r\n","import { isValidColor } from './colors';\n\nfunction logWords(results) {\n  console.log(results[results.length - 1][0].transcript);\n}\n\nexport function handleResult({ results }) {\n  logWords(results);\n  const words = results[results.length - 1][0].transcript;\n  console.log(words);\n  // lowercase everything\n  let color = words.toLowerCase();\n  // strip any spaces out\n  color = color.replace(/\\s/g, '');\n  // Check if it's a valid color\n  if (!isValidColor(color)) return;\n  // if it is, then show the UI for that\n  const colorSpan = document.querySelector(`.${color}`);\n  colorSpan.classList.add('got');\n  console.log('it is a valid color');\n  console.log(color);\n  // change the background color\n  document.body.style.backgroundColor = color;\n}\n","import { handleResult } from './handlers';\nimport { colorsByLength, isDark } from './colors';\n\nconsole.log(handleResult);\nconst colorsEl = document.querySelector('.colors');\n\nfunction displayColors(colors) {\n  return colors\n    .map(\n      color =>\n        `<span class=\"color ${color} ${\n          isDark(color) ? 'dark' : ''\n        }\" style = \"background: ${color}\">${color}</span>`\n    )\n    .join('');\n}\n\nwindow.SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\n\nfunction start() {\n  // see if their browser supports this\n  if (!('SpeechRecognition' in window)) {\n    console.log('Sorry your browser does not support speech reco.');\n    return;\n  }\n  // it does work\n  console.log('Starting...');\n  //   make a new speech reco\n  const recognition = new SpeechRecognition();\n  console.log(recognition);\n  recognition.continuous = true;\n  recognition.interimResults = true;\n  recognition.onresult = handleResult;\n  recognition.start();\n}\n\nstart();\ncolorsEl.innerHTML = displayColors(colorsByLength);\n"]}